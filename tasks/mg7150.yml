---
- name: create temporary directory
  tempfile:
    state: directory
    suffix: temp
  register: tempdir

- name: get cnijfilter archive
  get_url:
    url: "{{ canon_mg7100_cnijfilter_deb }}"
    dest: "{{ tempdir.path }}/cnijfilter.tar.gz"
    mode: 0444
    checksum: "{{ canon_mg7100_cnijfilter_deb_checksum }}"

- set_fact:
    archive_shortname: "{{ (canon_mg7100_cnijfilter_deb | basename).split('.tar')[0] }}"

- name: extract cnijfilter archive
  unarchive:
    src: "{{ tempdir.path }}/cnijfilter.tar.gz"
    dest: "{{ tempdir.path }}"
    remote_src: yes

- name: install
  shell: |
    set timeout 60
    ./install.sh

    expect "> "
    send "\n"

    expect "Select the connection method.[1]"
    send "2\n"

    expect "Enter the value. [0]"
    send "Q\n"

    exit 0
  args:
    executable: expect
    chdir: "{{ tempdir.path }}/{{ archive_shortname }}"

- name: create postinstaller
  copy:
    src: /usr/bin/cnijfilter-mg7100series-pkgconfig.sh
    remote_src: yes
    dest: /usr/bin/canon-mg7100series-postinstall.sh
    mode: 0755

- name: update postinstall
  blockinfile:
    path: /usr/bin/canon-mg7100series-postinstall.sh
    block: |
      if [ ${0##*/} = "canon-mg7100series-postinstall.sh" ]; then
          $C_function01 "$L_INST_COM_01_04" "mg7100series" "$C_system"
      fi

###"

- name: get scangearmp archive
  get_url:
    url: "{{ canon_mg7100_scangearmp_deb }}"
    dest: "{{ tempdir.path }}/scangearmp.tar.gz"
    mode: 0444
    checksum: "{{ canon_mg7100_scangearmp_deb_checksum }}"

- set_fact:
    archive_shortname: "{{ (canon_mg7100_scangearmp_deb | basename).split('.tar')[0] }}"

- name: extract scangearmp archive
  unarchive:
    src: "{{ tempdir.path }}/scangearmp.tar.gz"
    dest: "{{ tempdir.path }}"
    remote_src: yes

- name: install requirements
  apt:
    name: "{{ canon_requirements }}"
  vars:
    canon_requirements:
      - libpango1.0-0
      - libusb-0.1-4

- name: install
  shell: ./install.sh
  args:
    chdir: "{{ tempdir.path }}/{{ archive_shortname }}"

- name: clean temporary directory
  file:
    path: "{{ tempdir.path }}"
    state: absent
  when: tempdir.path is defined
